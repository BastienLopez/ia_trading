name: aitrading

services:
  # Service Dashboard principal
  dashboard:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: ai_trading_dashboard
    restart: on-failure
    volumes:
      - ../:/app
    ports:
      - "8050:8050"
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - TF_CPP_MIN_LOG_LEVEL=2
      - PYTHONPATH=/app
      - DASH_DEBUG=true
      - HOST=0.0.0.0
      - PORT=8050
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: python3 -m ai_trading.dashboard.app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - db
      - redis

  # Service AI API pour le modèle d'IA
  ai_api:
    container_name: ai_trading_api
    build:
      context: ../
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../:/app
    depends_on:
      - db
      - redis
    command: python3 -m uvicorn ai_trading.api:app --host 0.0.0.0 --port 8000 --reload
    restart: on-failure:5
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Service Web App (Interface utilisateur)
  web_app:
    container_name: ai_trading_web_app
    build:
      context: ../
      dockerfile: docker/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ../:/app
    depends_on:
      - ai_api
      - db
    command: python3 -m web_app.app
    restart: on-failure
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Base de données PostgreSQL
  db:
    container_name: ai_trading_db
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=ai_trading
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ai_trading}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service Redis pour la mise en cache
  redis:
    container_name: ai_trading_redis
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: 