name: AI Trading Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    # local + GA
    # runs-on: [ubuntu-latest, self-hosted]

    steps:
    - uses: actions/checkout@v4

    # 🔍 Espace disque avant nettoyage
    - name: Show disk space before cleanup
      run: df -h

    # 🧹 Nettoyage efficace pour libérer de la place
    - name: Cleanup to free disk space
      run: |
        echo "Removing large preinstalled SDKs..."
        sudo rm -rf /usr/share/dotnet || true
        sudo rm -rf /usr/local/lib/android || true
        sudo rm -rf /opt/ghc || true
        sudo rm -rf /opt/hostedtoolcache/CodeQL || true

        echo "Cleaning up Docker..."
        docker system prune -af || true

        echo "Cleaning up APT cache and temp files..."
        sudo apt-get clean || true
        sudo rm -rf /var/lib/apt/lists/* /tmp/* ~/.cache || true

    # 📊 Espace disque après nettoyage
    - name: Show disk space after cleanup
      run: df -h

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install TA-Lib
      run: |
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        ./configure --prefix=/usr
        make
        sudo make install
        cd ..
        rm -rf ta-lib-0.4.0-src.tar.gz ta-lib/

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install -e .
        python -m nltk.downloader punkt wordnet

    # Configuration pour pytest-asyncio
    - name: Create pytest.ini for asyncio configuration
      run: |
        if [ ! -f .pytest.ini ]; then
          echo "[pytest]" > .pytest.ini
          echo "asyncio_mode = strict" >> .pytest.ini
          echo "asyncio_default_fixture_loop_scope = function" >> .pytest.ini
        else
          grep -q "asyncio_default_fixture_loop_scope" .pytest.ini || echo "asyncio_default_fixture_loop_scope = function" >> .pytest.ini
        fi
        cat .pytest.ini

    - name: Run all tests
      run: |
        pytest ai_trading/tests/ ai_trading/utils/tests/ web_app/tests/ -v -rs \
          --ignore=ai_trading/tests/unit/test_advanced_llm_integrator.py \
          --ignore=ai_trading/tests/unit/test_fake_news_detector.py \
          --ignore=ai_trading/tests/unit/test_contextual_analyzer.py \
          --ignore=ai_trading/tests/test_enhanced_news_analyzer.py
