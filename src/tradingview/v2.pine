//@version=6
indicator("BTC Trading Signals", overlay=true)

// === PARAMÈTRES ===
// RSI
rsi_length = input.int(14, "RSI Length", minval=1)
rsi_overbought = input.float(70, "RSI Overbought", minval=0, maxval=100)
rsi_oversold = input.float(30, "RSI Oversold", minval=0, maxval=100)

// MACD
macd_fast = input.int(12, "MACD Fast Length", minval=1)
macd_slow = input.int(26, "MACD Slow Length", minval=1)
macd_signal = input.int(9, "MACD Signal Length", minval=1)

// EMA
ema_short = input.int(9, "EMA Short Length", minval=1)
ema_long = input.int(21, "EMA Long Length", minval=1)

// Ichimoku
tenkan_len = input.int(9, "Tenkan-Sen Length", minval=1)
kijun_len = input.int(26, "Kijun-Sen Length", minval=1)
senkou_span_b_len = input.int(52, "Senkou Span B Length", minval=1)
displacement = input.int(26, "Displacement", minval=1)

// Bollinger Bands
bb_length = input.int(20, "BB Length", minval=1)
bb_mult = input.float(2.0, "BB StdDev", minval=0.001, maxval=5)

// Volume Profile
show_vp = input.bool(true, "Show Volume Profile")
vp_lookback = input.int(20, "Volume Profile Lookback", minval=1)

// === CALCUL DES INDICATEURS ===
// Indicateurs existants
rsi = ta.rsi(close, rsi_length)
[macd_line, signal_line, hist_line] = ta.macd(close, macd_fast, macd_slow, macd_signal)
ema9 = ta.ema(close, ema_short)
ema21 = ta.ema(close, ema_long)

// Ichimoku Cloud
donchian(len) => math.avg(ta.lowest(len), ta.highest(len))
tenkan = donchian(tenkan_len)
kijun = donchian(kijun_len)
senkou_span_a = math.avg(tenkan, kijun)
senkou_span_b = donchian(senkou_span_b_len)

// Bollinger Bands
[bb_middle, bb_upper, bb_lower] = ta.bb(close, bb_length, bb_mult)

// Volume Profile
vp_sum = 0.0
vp_green_sum = 0.0
for i = 0 to vp_lookback-1
    vp_sum := vp_sum + volume[i]
    vp_green_sum := vp_green_sum + (close[i] > open[i] ? volume[i] : 0)
vp_ratio = vp_green_sum / vp_sum

// === CONDITIONS DE SIGNAL ===
// Conditions existantes
rsi_oversold_condition = rsi < rsi_oversold
rsi_overbought_condition = rsi > rsi_overbought
macd_bullish = ta.crossover(macd_line, signal_line)
macd_bearish = ta.crossunder(macd_line, signal_line)
ema_bullish = ta.crossover(ema9, ema21)
ema_bearish = ta.crossunder(ema9, ema21)

// Nouvelles conditions
cloud_bullish = close > senkou_span_a and close > senkou_span_b and tenkan > kijun
cloud_bearish = close < senkou_span_a and close < senkou_span_b and tenkan < kijun
bb_squeeze = (bb_upper - bb_lower) / bb_middle < 0.1
volume_surge = volume > ta.sma(volume, 20) * 2
high_vol_bullish = vp_ratio > 0.7 and volume_surge
high_vol_bearish = vp_ratio < 0.3 and volume_surge

// === AFFICHAGE ===
// Ichimoku Cloud
fill(plot(senkou_span_a, "Senkou Span A", color=color.new(color.green, 70)), plot(senkou_span_b, "Senkou Span B", color=color.new(color.red, 70)))
plot(tenkan, "Tenkan-Sen", color=color.blue)
plot(kijun, "Kijun-Sen", color=color.red)

// Bollinger Bands
plot(bb_upper, "BB Upper", color=color.new(color.blue, 50))
plot(bb_lower, "BB Lower", color=color.new(color.blue, 50))

// Signaux existants
plotshape(series=rsi_oversold_condition, title="RSI Oversold", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small)
plotshape(series=rsi_overbought_condition, title="RSI Overbought", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small)
plotshape(series=macd_bullish, title="MACD Bullish", location=location.belowbar, color=color.green, style=shape.diamond, size=size.small)
plotshape(series=macd_bearish, title="MACD Bearish", location=location.abovebar, color=color.red, style=shape.diamond, size=size.small)
plotshape(series=ema_bullish, title="EMA Bullish", location=location.belowbar, color=color.green, style=shape.circle, size=size.small)
plotshape(series=ema_bearish, title="EMA Bearish", location=location.abovebar, color=color.red, style=shape.circle, size=size.small)

// Nouveaux signaux
plotshape(series=cloud_bullish and volume_surge, title="Strong Cloud Bullish", location=location.belowbar, color=color.green, style=shape.square, size=size.small)
plotshape(series=cloud_bearish and volume_surge, title="Strong Cloud Bearish", location=location.abovebar, color=color.red, style=shape.square, size=size.small)
plotshape(series=bb_squeeze and high_vol_bullish, title="Squeeze Bullish", location=location.belowbar, color=color.yellow, style=shape.cross, size=size.small)
plotshape(series=bb_squeeze and high_vol_bearish, title="Squeeze Bearish", location=location.abovebar, color=color.yellow, style=shape.cross, size=size.small)

// Table de débogage améliorée
var table debug_table = table.new(position.top_right, 8, 6, bgcolor=color.black)
table.cell(debug_table, 0, 0, "Indicateur", bgcolor=color.gray, text_color=color.white)
table.cell(debug_table, 1, 0, "Valeur", bgcolor=color.gray, text_color=color.white)
table.cell(debug_table, 0, 1, "RSI", text_color=color.white)
table.cell(debug_table, 1, 1, str.tostring(rsi, "#.##"), text_color=color.white)
table.cell(debug_table, 0, 2, "MACD", text_color=color.white)
table.cell(debug_table, 1, 2, str.tostring(macd_line, "#.##"), text_color=color.white)
table.cell(debug_table, 0, 3, "Cloud Force", text_color=color.white)
table.cell(debug_table, 1, 3, cloud_bullish ? "Bullish" : cloud_bearish ? "Bearish" : "Neutral", text_color=color.white)
table.cell(debug_table, 0, 4, "Vol Profile", text_color=color.white)
table.cell(debug_table, 1, 4, str.tostring(vp_ratio * 100, "#.##") + "%", text_color=color.white)
table.cell(debug_table, 0, 5, "BB Squeeze", text_color=color.white)
table.cell(debug_table, 1, 5, bb_squeeze ? "Actif" : "Inactif", text_color=color.white)

// Alerte principale améliorée
alertcondition(rsi_oversold_condition or rsi_overbought_condition or macd_bullish or macd_bearish or ema_bullish or ema_bearish or (cloud_bullish and volume_surge) or (cloud_bearish and volume_surge) or (bb_squeeze and (high_vol_bullish or high_vol_bearish)), title="Signal Alert", message="Signal détecté sur {{ticker}} - {{interval}}") 